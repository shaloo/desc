{
  "openapi": "3.0.0",
  "info": {
    "title": "Puttshack Cloud API",
    "description": " Puttshack Cloud APIs offers an agile, scalable and responsive integration platform that can be used to build web-scale services.

                     These REST APIs are meant for Puttshack IT Team and Developers. Using these APIs, they can create newer Puttshack web applications for Puttshack customers or internal use.  
                    

                     Following categories of APIs are available as a start, more will follow:

                     ```

                     Bookings

                     Inventory
                     
                     Locations
                     
                     Payments
                     
                     Perks
                     
                     Players

                     Reservations

                     ```

                     Refer to [Puttshack Cloud API Documentation](https://cloud.puttshack.com/docs/index.html) for details.

                     Until the documentation is deployed you can refer to the [local build](../index.html).
                     
                     ----

                   ",
    "version": "1.0",
    "license": {
        "name": "Descriptive. (C)",
      }
  },
  "servers": [
    {
      "url": "https://cloud.puttshack.com"
    }
  ],
  "paths": {
    "/api/v1/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get Puttshack locations.",
        "description": "Obtain a list of available Puttshack [locations](../docs/concepts.html) from the cloud database. The response includes available time slots and courses.",
        "operationId": "getLocations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "Get bookings list.",
        "description": "Obtain a list of bookings for a specified location on a given date from the cloud database. The response contains details of booking in terms of time slot, user (booking host), location, reservation, payments and address information.",
        "operationId": "getBookings",
        "parameters": [
          {
            "in": "query",
            "name": "date",
            "description": "The date for which bookings need to be retrieved.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "location_id",
            "description": "The location identifier for which bookings need to be retrieved.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "The the type of bookings that need to be retrieved.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of bookings for the given date, location id or type (if specified).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bookings"
        ],
        "summary": "Create a new booking request.",
        "description": "A new booking can be created by specifying booking details such as the number of attendees, time slot for Teeing, Dining time, etc.",
        "operationId": "createBooking",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The response for the booking request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBookingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "Get booking details.",
        "description": "For a given booking identifier, retrieve the booking details from the cloud datastore.",
        "operationId": "getBooking",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "description": "The booking identifier for which details need to be retrieved.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The booking details for the requested booking identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "booking": {
                      "$ref": "#/components/schemas/Booking"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bookings"
        ],
        "summary": "Update booking request.",
        "description": "Once a booking is made, it can be updated later by specifying the booking identifier and the changes in terms of various booking details such as attendees, time etc.",
        "operationId": "updateBooking",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "description": "The booking identifier.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookingRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The update booking response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBookingResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}/reservations": {
      "get": {
        "tags": [
          "Bookings"
        ],
        "summary": "List of reservations.",
        "description": "For a given booking identifier, obtain a list of all the reservations made from the cloud datastore.",
        "operationId": "getBookingReservations",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "description": "The booking identifier.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of reservations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reservation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/bookings/{booking_id}/players": {
      "get": {
        "tags": [
          "Players"
        ],
        "summary": "List of players for a booking",
        "description": "Obtain a list of all the players and their details from the cloud datastore, based on the given booking identifier in the request.",
        "operationId": "getBookingPlayers",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "description": "The booking id",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of players",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "players": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Player"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create a payment intent for a booking.",
        "description": "Initiate a payment request for a given booking identifier and update the payment status in the cloud datastore along with transaction details.",
        "operationId": "createPayment",
        "parameters": [
          {
            "in": "path",
            "name": "booking_id",
            "description": "The booking identifier",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The payment intent response details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/payments/{payment_id}": {
      "put": {
        "tags": [
          "Payments"
        ],
        "summary": "Update a payment intent for a booking.",
        "description": "Make changes to a payment intent specified by the payment identifier in the request. These changes to the payment intent could be related to cancellation, payment failure or void processing in response to a third party payment provider webhook invocation. Or it could be initiated by the Puttshack customer or sales representative as part of cancellation process or addition of newer services to a booking or other changes in a booking.",
        "operationId": "updatePayment",
        "parameters": [
          {
            "in": "path",
            "name": "payment_id",
            "description": "The payment identifier.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated payment details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/reservations/{reservation_id}": {
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Update a reservation.",
        "description": "Make changes to a confirmed booking or a reservation corresponding to the specified reservation_id",
        "operationId": "updateReservation",
        "parameters": [
          {
            "in": "path",
            "name": "reservation_id",
            "description": "The reservation identifier.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated reservation details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateReservationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/players": {
      "post": {
        "tags": [
          "Players"
        ],
        "summary": "Create a new player.",
        "description": "Create a new Player Profile with the specified details in the request. You need to specify the unique booking identifier for the booking where this player would be an attendee or participant.",
        "operationId": "createPlayer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlayerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The newly created players.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "players": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Player"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/players/{player_id}": {
      "put": {
        "tags": [
          "Players"
        ],
        "summary": "Update a player details.",
        "description": "For a given player identifier, edit some of the player profile details as specified in the request.",
        "operationId": "updatePlayer",
        "parameters": [
          {
            "in": "path",
            "name": "player_id",
            "description": "The player identifier.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "The update player request details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlayerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated player details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePlayerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/perks/verify": {
      "post": {
        "tags": [
          "Perks"
        ],
        "summary": "Verify perks phone number.",
        "description": "As part of signing up process for loyalty and perks, initiate a Puttshack customer verification process via the specified phone number.",
        "operationId": "verifyPerks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPerksRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The verification request status response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/perks/confirm": {
      "post": {
        "tags": [
          "Perks"
        ],
        "summary": "Confirm perks sign up.",
        "description": "Acknowledge the code that the user shares as part of the Puttshack loyalty and perk sign up process and confirm perks enrollment.",
        "operationId": "confirmPerks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPerksRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The perks sign up confirmation response.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "perks_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "company_id": {
            "type": "integer",
            "nullable": true
          },
          "display_name": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "nullable": true
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          }
        },
        "required": [
          "id",
          "display_name",
          "first_name",
          "last_name"
        ]
      },
      "Company": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Booking": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer"
          },
          "location_id": {
            "type": "integer"
          },
          "start_time": {
            "type": "string"
          },
          "end_time": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          },
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reservation"
            }
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "required": [
          "id",
          "user_id",
          "location_id",
          "start_time",
          "end_time"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "street_2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "booking_id": {
            "type": "integer"
          },
          "player_id": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          },
          "start_time": {
            "type": "string"
          },
          "end_time": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "booking": {
            "$ref": "#/components/schemas/Booking"
          },
          "player": {
            "$ref": "#/components/schemas/Player"
          }
        },
        "required": [
          "id",
          "type",
          "booking_id",
          "guest_type",
          "start_time",
          "display_name",
          "end_time"
        ]
      },
      "Player": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "user_id": {
            "type": "integer",
            "nullable": true
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "confirmed": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "display_name",
          "confirmed",
          "type"
        ]
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Location identifier.",
            "type": "integer"
          },
          "name": {
            "description": "Location name.",
            "type": "string"
          },
          "open_time": {
            "description": "Opening time.",
            "type": "string"
          },
          "close_time": {
            "description": "Closing time.",
            "type": "string"
          },
          "courses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Course"
            }
          }
        },
        "required": [
          "id",
          "name",
          "open_time",
          "close_time",
          "courses"
        ]
      },
      "Course": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Course identifier",
            "type": "integer"
          },
          "location_id": {
            "description": "Location identifier.",
            "type": "integer"
          },
          "name": {
            "description": "Course name.",
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/Location"
          }
        },
        "required": [
          "id",
          "location_id",
          "name"
        ]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Payment identifier.",
            "type": "integer"
          },
          "booking_id": {
            "type": "integer",
            "description": "Booking identifier.",
          },
          "user_id": {
            "type": "integer",
            "description": "User (Booking host) identifier.",
          },
          "payment_type": {
            "type": "string",
            "description": "Payment Type.",
          },
          "grand_total": {
            "description": "Total payable amount.",
            "type": "number"
          },
          "sub_total": {
            "type": "number"
          },
          "taxes": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "approved": {
            "type": "boolean"
          },
          "transaction_id": {
            "type": "string"
          },
          "account_number": {
            "type": "string"
          },
          "error_message": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "booking": {
            "$ref": "#/components/schemas/Booking"
          },
          "line_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItem"
            }
          }
        },
        "required": [
          "id",
          "booking_id",
          "user_id",
          "payment_type",
          "grand_total",
          "sub_total",
          "taxes",
          "status",
          "approved",
          "error_message",
          "created_at"
        ]
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "tax": {
            "type": "number"
          },
          "qty": {
            "type": "number"
          },
          "grand_total": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "name",
          "sku",
          "price",
          "type",
          "tax",
          "qty",
          "grand_total"
        ]
      },
      "TeeTimeRequest": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string"
          },
          "course": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "CreateBookingRequest": {
        "type": "object",
        "properties": {
          "adults": {
            "type": "integer"
          },
          "children": {
            "type": "integer"
          },
          "juniors": {
            "type": "integer"
          },
          "tee_times": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TeeTimeRequest"
            }
          },
          "dining_time": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateBookingResponse": {
        "type": "object",
        "properties": {
          "booking": {
            "$ref": "#/components/schemas/Booking"
          }
        }
      },
      "VerifyPerksRequest": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          }
        }
      },
      "ConfirmPerksRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "CreatePlayerRequest": {
        "type": "object",
        "properties": {
          "booking_id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string"
          },
          "display_name": {
            "type": "string",
            "nullable": true
          },
          "children": {
            "type": "integer",
            "nullable": true
          }
        },
        "required": [
          "booking_id",
          "display_name",
          "children"
        ]
      },
      "CreatePlayerResponse": {
        "type": "object",
        "properties": {
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Player"
            }
          }
        }
      },
      "UpdatePlayerRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "display_name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "display_name"
        ]
      },
      "UpdatePlayerResponse": {
        "type": "object",
        "properties": {
          "player": {
            "$ref": "#/components/schemas/Player"
          }
        }
      },
      "UpdateReservationRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateReservationResponse": {
        "type": "object",
        "properties": {
          "reservation": {
            "$ref": "#/components/schemas/Reservation"
          }
        }
      },
      "CreatePaymentRequest": {
        "type": "object",
        "properties": {
          "booking_id": {
            "type": "integer"
          }
        },
        "required": [
          "booking_id"
        ]
      },
      "CreatePaymentResponse": {
        "type": "object",
        "properties": {
          "client_secret": {
            "type": "string"
          },
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        }
      },
      "UpdatePaymentRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdatePaymentResponse": {
        "type": "object",
        "properties": {
          "payment": {
            "$ref": "#/components/schemas/Payment"
          }
        }
      }
    }
  }
}
